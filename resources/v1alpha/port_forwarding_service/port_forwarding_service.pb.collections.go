// Code generated by protoc-gen-goten-resource
// Resource: PortForwardingService
// DO NOT EDIT!!!

package port_forwarding_service

import (
	gotenresource "github.com/cloudwan/goten-sdk/runtime/resource"
)

// proto imports
import (
	ntt_meta "github.com/cloudwan/edgelq-sdk/common/types/meta"
	iam_project "github.com/cloudwan/edgelq-sdk/iam/resources/v1alpha/project"
	access_point "github.com/cloudwan/ztna-sdk/resources/v1alpha/access_point"
)

// ensure the imports are used
var (
	_ = new(gotenresource.ListQuery)
)

// make sure we're using proto imports
var (
	_ = &ntt_meta.Meta{}
	_ = &iam_project.Project{}
	_ = &access_point.AccessPoint{}
)

type PortForwardingServiceList []*PortForwardingService

func (l PortForwardingServiceList) Append(item gotenresource.Resource) gotenresource.ResourceList {
	return append(l, item.(*PortForwardingService))
}

func (l PortForwardingServiceList) AppendList(list gotenresource.ResourceList) gotenresource.ResourceList {
	return append(l, list.(PortForwardingServiceList)...)
}

func (l PortForwardingServiceList) Slice(first, second int) gotenresource.ResourceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceList) At(idx int) gotenresource.Resource {
	return l[idx]
}

func (l PortForwardingServiceList) Set(idx int, res gotenresource.Resource) {
	l[idx] = res.(*PortForwardingService)
}

func (l PortForwardingServiceList) Length() int {
	return len(l)
}

type PortForwardingServiceChangeList []*PortForwardingServiceChange

func (l PortForwardingServiceChangeList) Append(item gotenresource.ResourceChange) gotenresource.ResourceChangeList {
	return append(l, item.(*PortForwardingServiceChange))
}

func (l PortForwardingServiceChangeList) AppendList(list gotenresource.ResourceChangeList) gotenresource.ResourceChangeList {
	return append(l, list.(PortForwardingServiceChangeList)...)
}

func (l PortForwardingServiceChangeList) Slice(first, second int) gotenresource.ResourceChangeList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceChangeList) At(idx int) gotenresource.ResourceChange {
	return l[idx]
}

func (l PortForwardingServiceChangeList) Set(idx int, change gotenresource.ResourceChange) {
	l[idx] = change.(*PortForwardingServiceChange)
}

func (l PortForwardingServiceChangeList) Length() int {
	return len(l)
}

type PortForwardingServiceNameList []*Name

func (l PortForwardingServiceNameList) Append(name gotenresource.Name) gotenresource.NameList {
	return append(l, name.(*Name))
}

func (l PortForwardingServiceNameList) AppendList(list gotenresource.NameList) gotenresource.NameList {
	return append(l, list.(PortForwardingServiceNameList)...)
}

func (l PortForwardingServiceNameList) Slice(first, second int) gotenresource.NameList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceNameList) At(idx int) gotenresource.Name {
	return l[idx]
}

func (l PortForwardingServiceNameList) Set(idx int, name gotenresource.Name) {
	l[idx] = name.(*Name)
}

func (l PortForwardingServiceNameList) Length() int {
	return len(l)
}

type PortForwardingServiceReferenceList []*Reference

func (l PortForwardingServiceReferenceList) Append(ref gotenresource.Reference) gotenresource.ReferenceList {
	return append(l, ref.(*Reference))
}

func (l PortForwardingServiceReferenceList) AppendList(list gotenresource.ReferenceList) gotenresource.ReferenceList {
	return append(l, list.(PortForwardingServiceReferenceList)...)
}

func (l PortForwardingServiceReferenceList) Slice(first, second int) gotenresource.ReferenceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceReferenceList) At(idx int) gotenresource.Reference {
	return l[idx]
}

func (l PortForwardingServiceReferenceList) Set(idx int, ref gotenresource.Reference) {
	l[idx] = ref.(*Reference)
}

func (l PortForwardingServiceReferenceList) Length() int {
	return len(l)
}

type PortForwardingServiceParentNameList []*ParentName

func (l PortForwardingServiceParentNameList) Append(name gotenresource.Name) gotenresource.ParentNameList {
	return append(l, name.(*ParentName))
}

func (l PortForwardingServiceParentNameList) AppendList(list gotenresource.ParentNameList) gotenresource.ParentNameList {
	return append(l, list.(PortForwardingServiceParentNameList)...)
}

func (l PortForwardingServiceParentNameList) Slice(first, second int) gotenresource.ParentNameList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceParentNameList) At(idx int) gotenresource.Name {
	return l[idx]
}

func (l PortForwardingServiceParentNameList) Set(idx int, name gotenresource.Name) {
	l[idx] = name.(*ParentName)
}

func (l PortForwardingServiceParentNameList) Length() int {
	return len(l)
}

type PortForwardingServiceParentReferenceList []*ParentReference

func (l PortForwardingServiceParentReferenceList) Append(ref gotenresource.Reference) gotenresource.ParentReferenceList {
	return append(l, ref.(*ParentReference))
}

func (l PortForwardingServiceParentReferenceList) AppendList(list gotenresource.ParentReferenceList) gotenresource.ParentReferenceList {
	return append(l, list.(PortForwardingServiceParentReferenceList)...)
}

func (l PortForwardingServiceParentReferenceList) Slice(first, second int) gotenresource.ParentReferenceList {
	if first > 0 && second > 0 {
		return l[first:second]
	} else if first > 0 {
		return l[first:]
	} else if second > 0 {
		return l[:second]
	}
	return l[:]
}

func (l PortForwardingServiceParentReferenceList) At(idx int) gotenresource.Reference {
	return l[idx]
}

func (l PortForwardingServiceParentReferenceList) Set(idx int, ref gotenresource.Reference) {
	l[idx] = ref.(*ParentReference)
}

func (l PortForwardingServiceParentReferenceList) Length() int {
	return len(l)
}

type PortForwardingServiceMap map[Name]*PortForwardingService

func (m PortForwardingServiceMap) Get(name gotenresource.Name) gotenresource.Resource {
	return m[*name.(*Name)]
}

func (m PortForwardingServiceMap) Set(res gotenresource.Resource) {
	tRes := res.(*PortForwardingService)
	m[*tRes.Name] = tRes
}

func (m PortForwardingServiceMap) Delete(name gotenresource.Name) {
	delete(m, *name.(*Name))
}

func (m PortForwardingServiceMap) Length() int {
	return len(m)
}

func (m PortForwardingServiceMap) ForEach(cb func(gotenresource.Name, gotenresource.Resource) bool) {
	for name, res := range m {
		if !cb(&name, res) {
			break
		}
	}
}

type PortForwardingServiceChangeMap map[Name]*PortForwardingServiceChange

func (m PortForwardingServiceChangeMap) Get(name gotenresource.Name) gotenresource.ResourceChange {
	return m[*name.(*Name)]
}

func (m PortForwardingServiceChangeMap) Set(change gotenresource.ResourceChange) {
	tChange := change.(*PortForwardingServiceChange)
	m[*tChange.GetPortForwardingServiceName()] = tChange
}

func (m PortForwardingServiceChangeMap) Delete(name gotenresource.Name) {
	delete(m, *name.(*Name))
}

func (m PortForwardingServiceChangeMap) Length() int {
	return len(m)
}

func (m PortForwardingServiceChangeMap) ForEach(cb func(gotenresource.Name, gotenresource.ResourceChange) bool) {
	for name, res := range m {
		if !cb(&name, res) {
			break
		}
	}
}
